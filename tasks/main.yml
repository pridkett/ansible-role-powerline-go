---
- name: load source vars
  with_first_found:
    - "../vars/architecture/{{ ansible_architecture | lower }}.yml"
    - ../vars/architecture/default.yml
  include_vars: "{{ item }}"

- name: load sha256sums
  with_first_found:
    - "../vars/versions/powerline-go-{{ ansible_system | lower }}-{{ powerline_go_arch }}.{{ powerline_go_version}}.yml"
    - "../vars/versions/default.yml"
  include_vars: "{{ item }}"

- name: Create $HOME/go/bin directory
  file:
    path: "{{ ansible_env.HOME}}/go/bin"
    state: directory
- name: Download and install powerline-go binary
  get_url:
    url: "https://github.com/justjanne/powerline-go/releases/download/{{ powerline_go_version }}/powerline-go-{{ ansible_system | lower}}-{{ powerline_go_arch}}"
    dest: "{{ ansible_env.HOME }}/go/bin/powerline-go"
    checksum: "sha256:{{ powerline_go_sha256_sum }}"
    mode: 0755

- block:
    - name: Check if fish script path exists
      stat:
        path: "{{ fish_shell_script_path | dirname }}"
      register: path_details
    - name: Create fish script path
      file:
        path: "{{ fish_shell_script_path | dirname }}"
        state: directory
        mode: 0755
      when: path_details.stat.exists == false
    - name: Install powerline-go fish shell support
      template:
        src: powerline-go.fish.j2
        dest: "{{ fish_shell_script_path }}"
      tags: configure
  when: powerline_go.install_fish is defined and powerline_go.install_fish == True

- block:
    - name: Check if zsh script path exists
      stat:
        path: "{{ zsh_shell_script_path | dirname }}"
      register: path_details
    - name: Create zsh script path
      file:
        path: "{{ zsh_shell_script_path | dirname }}"
        state: directory
        mode: 0755
      when: path_details.stat.exists == false
    - name: Install powerline-go zsh support
      template:
        src: powerline-go.zsh.j2
        dest: "{{ zsh_shell_script_path }}"
      tags: configure
  when: powerline_go.install_zsh is defined and powerline_go.install_zsh == True

- block:
    - name: Check is pwsh script path exists
      stat:
        path: "{{ pwsh_shell_script_path | dirname }}"
      register: path_details
    - name: Create pwsh script path
      file:
        path: "{{ pwsh_shell_script_path | dirname }}"
        state: directory
        mode: 0755
      when: path_details.stat.exists == false
    - name: Install powerline-go pwsh support module
      template:
        src: powerline-go.psm1.j2
        dest: "{{ pwsh_shell_script_path }}/powerline-go.psm1"
      tags: configure
    - name: Install powerline-go pwsh support to profile.ps1
      blockinfile:
        path: "{{ pwsh_shell_script_path }}/profile.ps1"
        block: |
          Import-Module (Join-Path -Path (Split-Path $PROFILE) -child "powerline-go.psm1")

          function global:prompt {
              Out-PowerlineGoPrompt
          }
        marker: "# *** {mark} ANSIBLE MANAGED BLOCK ***"
        state: present
        insertafter: EOF
        create: yes

  when: powerline_go.install_pwsh is defined and powerline_go.install_pwsh == True
